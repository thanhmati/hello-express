version: 2.1

orbs:
    ts: hubci/tailscale@0.1
jobs:
    deploy:
        docker:
            - image: cimg/base:current
              auth:
                  username: $DOCKER_USERNAME
                  password: $DOCKER_PASSWORD
        parameters:
            auth-key:
                type: env_var_name
                default: TS_AUTHKEY
           
        steps:
            - checkout
            - setup_remote_docker:
                  docker_layer_caching: true
            - run:
                  name: Build Docker image
                  command: |
                      docker build -t $DOCKER_USERNAME/hello-express-test .
            - run:
                  name: Push application Docker image
                  command: |
                      echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
                      docker push $DOCKER_USERNAME/hello-express-test
            - ts/install
            - ts/connect
            - run:
                  name: Ping to server
                  command: |
                      curl "http://100.110.248.12"
            - add_ssh_keys:
                fingerprints:
                    - "SHA256:kGySpgc3I6XxXGe02JXR+Yl862rm+FtVGBAc5rfDQz0"
            - run:
                  name: Add server to known_hosts
                  command: |
                      ssh-keyscan -H 100.110.248.12 >> ~/.ssh/known_hosts
                      ssh-keyscan -H 192.168.1.213 >> ~/.ssh/known_hosts
            - run:
                  name: Deploy to server
                  command: |
                      ssh thanhdo@100.110.248.12 "ls"                  

workflows:
    deploy-dev:
        jobs:
            - deploy:
                  context: dev
                  filters:
                      branches:
                          only:
                              - dev
    deploy-staging:
        jobs:
            - deploy:
                  context: staging
                  filters:
                      branches:
                          only:
                              - staging
    deploy-prod:
        jobs:
            - deploy:
                  context: prod
                  filters:
                      branches:
                          only:
                              - main
